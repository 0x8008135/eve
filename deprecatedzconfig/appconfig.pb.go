// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: appconfig.proto

package deprecatedzconfig

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import devcommon "github.com/zededa/api/devcommon"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AppInstanceConfig struct {
	Uuidandversion      *devcommon.UUIDandVersion `protobuf:"bytes,1,opt,name=uuidandversion" json:"uuidandversion,omitempty"`
	Displayname         string                    `protobuf:"bytes,2,opt,name=displayname,proto3" json:"displayname,omitempty"`
	Fixedresources      *VmConfig                 `protobuf:"bytes,3,opt,name=fixedresources" json:"fixedresources,omitempty"`
	Storageconfiglist   []*StorageConfig          `protobuf:"bytes,4,rep,name=storageconfiglist" json:"storageconfiglist,omitempty"`
	Activate            bool                      `protobuf:"varint,5,opt,name=activate,proto3" json:"activate,omitempty"`
	Overlaynetworklist  []*EIDOverlayConfig       `protobuf:"bytes,6,rep,name=overlaynetworklist" json:"overlaynetworklist,omitempty"`
	Underlaynetworklist []*UnderlayNetwork        `protobuf:"bytes,7,rep,name=underlaynetworklist" json:"underlaynetworklist,omitempty"`
}

func (m *AppInstanceConfig) Reset()                    { *m = AppInstanceConfig{} }
func (m *AppInstanceConfig) String() string            { return proto.CompactTextString(m) }
func (*AppInstanceConfig) ProtoMessage()               {}
func (*AppInstanceConfig) Descriptor() ([]byte, []int) { return fileDescriptorAppconfig, []int{0} }

func (m *AppInstanceConfig) GetUuidandversion() *devcommon.UUIDandVersion {
	if m != nil {
		return m.Uuidandversion
	}
	return nil
}

func (m *AppInstanceConfig) GetDisplayname() string {
	if m != nil {
		return m.Displayname
	}
	return ""
}

func (m *AppInstanceConfig) GetFixedresources() *VmConfig {
	if m != nil {
		return m.Fixedresources
	}
	return nil
}

func (m *AppInstanceConfig) GetStorageconfiglist() []*StorageConfig {
	if m != nil {
		return m.Storageconfiglist
	}
	return nil
}

func (m *AppInstanceConfig) GetActivate() bool {
	if m != nil {
		return m.Activate
	}
	return false
}

func (m *AppInstanceConfig) GetOverlaynetworklist() []*EIDOverlayConfig {
	if m != nil {
		return m.Overlaynetworklist
	}
	return nil
}

func (m *AppInstanceConfig) GetUnderlaynetworklist() []*UnderlayNetwork {
	if m != nil {
		return m.Underlaynetworklist
	}
	return nil
}

func init() {
	proto.RegisterType((*AppInstanceConfig)(nil), "AppInstanceConfig")
}
func (m *AppInstanceConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AppInstanceConfig) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Uuidandversion != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAppconfig(dAtA, i, uint64(m.Uuidandversion.Size()))
		n1, err := m.Uuidandversion.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if len(m.Displayname) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintAppconfig(dAtA, i, uint64(len(m.Displayname)))
		i += copy(dAtA[i:], m.Displayname)
	}
	if m.Fixedresources != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintAppconfig(dAtA, i, uint64(m.Fixedresources.Size()))
		n2, err := m.Fixedresources.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if len(m.Storageconfiglist) > 0 {
		for _, msg := range m.Storageconfiglist {
			dAtA[i] = 0x22
			i++
			i = encodeVarintAppconfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Activate {
		dAtA[i] = 0x28
		i++
		if m.Activate {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Overlaynetworklist) > 0 {
		for _, msg := range m.Overlaynetworklist {
			dAtA[i] = 0x32
			i++
			i = encodeVarintAppconfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Underlaynetworklist) > 0 {
		for _, msg := range m.Underlaynetworklist {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintAppconfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func encodeVarintAppconfig(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AppInstanceConfig) Size() (n int) {
	var l int
	_ = l
	if m.Uuidandversion != nil {
		l = m.Uuidandversion.Size()
		n += 1 + l + sovAppconfig(uint64(l))
	}
	l = len(m.Displayname)
	if l > 0 {
		n += 1 + l + sovAppconfig(uint64(l))
	}
	if m.Fixedresources != nil {
		l = m.Fixedresources.Size()
		n += 1 + l + sovAppconfig(uint64(l))
	}
	if len(m.Storageconfiglist) > 0 {
		for _, e := range m.Storageconfiglist {
			l = e.Size()
			n += 1 + l + sovAppconfig(uint64(l))
		}
	}
	if m.Activate {
		n += 2
	}
	if len(m.Overlaynetworklist) > 0 {
		for _, e := range m.Overlaynetworklist {
			l = e.Size()
			n += 1 + l + sovAppconfig(uint64(l))
		}
	}
	if len(m.Underlaynetworklist) > 0 {
		for _, e := range m.Underlaynetworklist {
			l = e.Size()
			n += 1 + l + sovAppconfig(uint64(l))
		}
	}
	return n
}

func sovAppconfig(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozAppconfig(x uint64) (n int) {
	return sovAppconfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AppInstanceConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAppconfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AppInstanceConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AppInstanceConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uuidandversion", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppconfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAppconfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Uuidandversion == nil {
				m.Uuidandversion = &devcommon.UUIDandVersion{}
			}
			if err := m.Uuidandversion.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Displayname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppconfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppconfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Displayname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fixedresources", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppconfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAppconfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Fixedresources == nil {
				m.Fixedresources = &VmConfig{}
			}
			if err := m.Fixedresources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Storageconfiglist", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppconfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAppconfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Storageconfiglist = append(m.Storageconfiglist, &StorageConfig{})
			if err := m.Storageconfiglist[len(m.Storageconfiglist)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Activate", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppconfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Activate = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Overlaynetworklist", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppconfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAppconfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Overlaynetworklist = append(m.Overlaynetworklist, &EIDOverlayConfig{})
			if err := m.Overlaynetworklist[len(m.Overlaynetworklist)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Underlaynetworklist", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppconfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAppconfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Underlaynetworklist = append(m.Underlaynetworklist, &UnderlayNetwork{})
			if err := m.Underlaynetworklist[len(m.Underlaynetworklist)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAppconfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAppconfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAppconfig(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAppconfig
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAppconfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAppconfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthAppconfig
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowAppconfig
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipAppconfig(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthAppconfig = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAppconfig   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("appconfig.proto", fileDescriptorAppconfig) }

var fileDescriptorAppconfig = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xbf, 0x72, 0x1a, 0x31,
	0x10, 0xc6, 0x73, 0x21, 0x21, 0x20, 0x26, 0x10, 0x94, 0xe6, 0x86, 0xe2, 0x72, 0x93, 0x26, 0x57,
	0xe9, 0x26, 0xa4, 0x48, 0x93, 0x06, 0x42, 0x0a, 0x9a, 0x64, 0xe6, 0x32, 0x50, 0xd0, 0x09, 0x69,
	0xc1, 0x1a, 0x73, 0x92, 0x46, 0xd2, 0x9d, 0x6d, 0x4a, 0x3f, 0x85, 0x1f, 0xc9, 0xa5, 0x1f, 0xc1,
	0x83, 0x5f, 0xc4, 0xe3, 0xd3, 0xf9, 0xcf, 0x00, 0xee, 0xb4, 0xfb, 0x7d, 0xfb, 0xdb, 0x9d, 0x5d,
	0xa1, 0x1e, 0xd5, 0x9a, 0x29, 0xb9, 0x12, 0x6b, 0xa2, 0x8d, 0x72, 0x6a, 0x90, 0xae, 0x85, 0x3b,
	0x29, 0x96, 0x84, 0xa9, 0x3c, 0xdd, 0x02, 0x07, 0x4e, 0x53, 0xaa, 0x45, 0xca, 0xa1, 0x64, 0x2a,
	0xcf, 0x95, 0x7c, 0x7e, 0xd5, 0x05, 0x1f, 0x25, 0xb8, 0x33, 0x65, 0x4e, 0x1f, 0x43, 0xeb, 0x94,
	0xa1, 0x6b, 0xa8, 0xc3, 0x56, 0x99, 0xfb, 0xd7, 0xd7, 0xcb, 0x06, 0xea, 0x8f, 0xb4, 0x9e, 0x4a,
	0xeb, 0xa8, 0x64, 0xf0, 0xbb, 0x6a, 0x8a, 0x7f, 0xa2, 0x6e, 0x51, 0x08, 0x4e, 0x25, 0x2f, 0xc1,
	0x58, 0xa1, 0x64, 0x18, 0xc4, 0x41, 0xd2, 0x19, 0xf6, 0xc8, 0x6c, 0x36, 0x9d, 0x50, 0xc9, 0xe7,
	0x3e, 0x9d, 0xed, 0xd9, 0x70, 0x8c, 0x3a, 0x5c, 0x58, 0xbd, 0xa1, 0x17, 0x92, 0xe6, 0x10, 0xbe,
	0x8d, 0x83, 0xa4, 0x9d, 0xbd, 0x4c, 0xe1, 0xef, 0xa8, 0xbb, 0x12, 0xe7, 0xc0, 0x0d, 0x58, 0x55,
	0x18, 0x06, 0x36, 0x6c, 0x54, 0xe8, 0x36, 0x99, 0xe7, 0xbe, 0x7b, 0xb6, 0x67, 0xc0, 0xbf, 0x50,
	0xbf, 0x1e, 0xdf, 0xef, 0x64, 0x23, 0xac, 0x0b, 0xdf, 0xc5, 0x8d, 0xa4, 0x33, 0xec, 0x92, 0xff,
	0x5e, 0xa9, 0x4b, 0x0f, 0x8d, 0x78, 0x80, 0x5a, 0x94, 0x39, 0x51, 0x52, 0x07, 0xe1, 0xfb, 0x38,
	0x48, 0x5a, 0xd9, 0x53, 0x8c, 0x47, 0x08, 0xab, 0x12, 0xcc, 0xc3, 0x6c, 0x7e, 0x5d, 0x15, 0xba,
	0x59, 0xa1, 0xfb, 0xe4, 0xcf, 0x74, 0xf2, 0xcf, 0xab, 0x35, 0xfd, 0x88, 0x19, 0x8f, 0xd1, 0xe7,
	0x42, 0xf2, 0x03, 0xc6, 0x87, 0x8a, 0xf1, 0x89, 0xcc, 0x6a, 0xed, 0xaf, 0xd7, 0xb2, 0x63, 0xe6,
	0xf1, 0xe2, 0x7a, 0x17, 0x05, 0x37, 0xbb, 0x28, 0xb8, 0xdd, 0x45, 0xc1, 0xd5, 0x5d, 0xf4, 0x06,
	0x7d, 0x61, 0x2a, 0x27, 0xfe, 0xd0, 0x84, 0x6d, 0x54, 0xc1, 0x49, 0x61, 0xc1, 0x94, 0x82, 0xd5,
	0x17, 0x5c, 0x7c, 0x7b, 0xed, 0x43, 0x68, 0x03, 0x8c, 0x3a, 0xe0, 0x5b, 0xbf, 0x82, 0x65, 0xb3,
	0xf2, 0xff, 0xb8, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x95, 0xff, 0x33, 0x53, 0x02, 0x00, 0x00,
}
