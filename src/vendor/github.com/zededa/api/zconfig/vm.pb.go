// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vm.proto

package zconfig

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// For now we need to tell the device which virtualization mode
// to use. Later we might use a single one for all VMs (on any particular
// ISA). If we end up keeping this we should make the names be less
// tied to a particular hypervisor.
type VmMode int32

const (
	VmMode_PV  VmMode = 0
	VmMode_HVM VmMode = 1
)

var VmMode_name = map[int32]string{
	0: "PV",
	1: "HVM",
}
var VmMode_value = map[string]int32{
	"PV":  0,
	"HVM": 1,
}

func (x VmMode) String() string {
	return proto.EnumName(VmMode_name, int32(x))
}
func (VmMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type VmConfig struct {
	Kernel             string   `protobuf:"bytes,1,opt,name=kernel" json:"kernel,omitempty"`
	Ramdisk            string   `protobuf:"bytes,2,opt,name=ramdisk" json:"ramdisk,omitempty"`
	Memory             uint32   `protobuf:"varint,3,opt,name=memory" json:"memory,omitempty"`
	Maxmem             uint32   `protobuf:"varint,4,opt,name=maxmem" json:"maxmem,omitempty"`
	Vcpus              uint32   `protobuf:"varint,5,opt,name=vcpus" json:"vcpus,omitempty"`
	Maxcpus            uint32   `protobuf:"varint,6,opt,name=maxcpus" json:"maxcpus,omitempty"`
	Rootdev            string   `protobuf:"bytes,7,opt,name=rootdev" json:"rootdev,omitempty"`
	Extraargs          string   `protobuf:"bytes,8,opt,name=extraargs" json:"extraargs,omitempty"`
	Bootloader         string   `protobuf:"bytes,9,opt,name=bootloader" json:"bootloader,omitempty"`
	Cpus               string   `protobuf:"bytes,10,opt,name=cpus" json:"cpus,omitempty"`
	Devicetree         string   `protobuf:"bytes,11,opt,name=devicetree" json:"devicetree,omitempty"`
	Dtdev              []string `protobuf:"bytes,12,rep,name=dtdev" json:"dtdev,omitempty"`
	Irqs               []uint32 `protobuf:"varint,13,rep,packed,name=irqs" json:"irqs,omitempty"`
	Iomem              []string `protobuf:"bytes,14,rep,name=iomem" json:"iomem,omitempty"`
	VirtualizationMode VmMode   `protobuf:"varint,15,opt,name=virtualizationMode,enum=VmMode" json:"virtualizationMode,omitempty"`
	EnableVnc          bool     `protobuf:"varint,16,opt,name=enableVnc" json:"enableVnc,omitempty"`
}

func (m *VmConfig) Reset()                    { *m = VmConfig{} }
func (m *VmConfig) String() string            { return proto.CompactTextString(m) }
func (*VmConfig) ProtoMessage()               {}
func (*VmConfig) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *VmConfig) GetKernel() string {
	if m != nil {
		return m.Kernel
	}
	return ""
}

func (m *VmConfig) GetRamdisk() string {
	if m != nil {
		return m.Ramdisk
	}
	return ""
}

func (m *VmConfig) GetMemory() uint32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *VmConfig) GetMaxmem() uint32 {
	if m != nil {
		return m.Maxmem
	}
	return 0
}

func (m *VmConfig) GetVcpus() uint32 {
	if m != nil {
		return m.Vcpus
	}
	return 0
}

func (m *VmConfig) GetMaxcpus() uint32 {
	if m != nil {
		return m.Maxcpus
	}
	return 0
}

func (m *VmConfig) GetRootdev() string {
	if m != nil {
		return m.Rootdev
	}
	return ""
}

func (m *VmConfig) GetExtraargs() string {
	if m != nil {
		return m.Extraargs
	}
	return ""
}

func (m *VmConfig) GetBootloader() string {
	if m != nil {
		return m.Bootloader
	}
	return ""
}

func (m *VmConfig) GetCpus() string {
	if m != nil {
		return m.Cpus
	}
	return ""
}

func (m *VmConfig) GetDevicetree() string {
	if m != nil {
		return m.Devicetree
	}
	return ""
}

func (m *VmConfig) GetDtdev() []string {
	if m != nil {
		return m.Dtdev
	}
	return nil
}

func (m *VmConfig) GetIrqs() []uint32 {
	if m != nil {
		return m.Irqs
	}
	return nil
}

func (m *VmConfig) GetIomem() []string {
	if m != nil {
		return m.Iomem
	}
	return nil
}

func (m *VmConfig) GetVirtualizationMode() VmMode {
	if m != nil {
		return m.VirtualizationMode
	}
	return VmMode_PV
}

func (m *VmConfig) GetEnableVnc() bool {
	if m != nil {
		return m.EnableVnc
	}
	return false
}

func init() {
	proto.RegisterType((*VmConfig)(nil), "VmConfig")
	proto.RegisterEnum("VmMode", VmMode_name, VmMode_value)
}

func init() { proto.RegisterFile("vm.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x3d, 0x6f, 0xdb, 0x30,
	0x10, 0x86, 0x2b, 0xcb, 0xd6, 0x07, 0x5b, 0xbb, 0x06, 0x51, 0x14, 0x2c, 0xd0, 0x0f, 0xa1, 0x93,
	0xd0, 0x41, 0x06, 0xda, 0xa1, 0x6b, 0x90, 0x2c, 0x59, 0x0c, 0x04, 0x1a, 0x34, 0x64, 0xa3, 0xc4,
	0x8b, 0x43, 0x58, 0x14, 0x1d, 0x8a, 0x12, 0x1c, 0xff, 0xb9, 0xfc, 0xb5, 0x80, 0x47, 0x19, 0xce,
	0x90, 0x8d, 0xcf, 0x73, 0xef, 0xf1, 0x78, 0x90, 0x48, 0x32, 0xaa, 0xe2, 0x60, 0xb4, 0xd5, 0xbf,
	0x5f, 0x42, 0x92, 0x54, 0xea, 0x46, 0x77, 0x0f, 0x72, 0x47, 0xbf, 0x92, 0x68, 0x0f, 0xa6, 0x83,
	0x96, 0x05, 0x59, 0x90, 0xa7, 0xe5, 0x44, 0x94, 0x91, 0xd8, 0x70, 0x25, 0x64, 0xbf, 0x67, 0x33,
	0x2c, 0x9c, 0xd1, 0x75, 0x28, 0x50, 0xda, 0x3c, 0xb3, 0x30, 0x0b, 0xf2, 0x65, 0x39, 0x11, 0x7a,
	0x7e, 0x54, 0xa0, 0xd8, 0x7c, 0xf2, 0x48, 0xf4, 0x0b, 0x59, 0x8c, 0xcd, 0x61, 0xe8, 0xd9, 0x02,
	0xb5, 0x07, 0x77, 0xbf, 0xe2, 0x47, 0xf4, 0x11, 0xfa, 0x33, 0xe2, 0x64, 0xad, 0xad, 0x80, 0x91,
	0xc5, 0xd3, 0x64, 0x8f, 0xf4, 0x3b, 0x49, 0xe1, 0x68, 0x0d, 0xe7, 0x66, 0xd7, 0xb3, 0x04, 0x6b,
	0x17, 0x41, 0x7f, 0x12, 0x52, 0x6b, 0x6d, 0x5b, 0xcd, 0x05, 0x18, 0x96, 0x62, 0xf9, 0x8d, 0xa1,
	0x94, 0xcc, 0x71, 0x1c, 0xc1, 0x0a, 0x9e, 0x5d, 0x8f, 0x80, 0x51, 0x36, 0x60, 0x0d, 0x00, 0xfb,
	0xe8, 0x7b, 0x2e, 0xc6, 0xbd, 0x5d, 0xe0, 0x4b, 0x3e, 0x65, 0x61, 0x9e, 0x96, 0x1e, 0xdc, 0x4d,
	0xd2, 0x3c, 0xf5, 0x6c, 0x99, 0x85, 0xf9, 0xb2, 0xc4, 0xb3, 0x4b, 0x4a, 0xed, 0x96, 0x5f, 0xf9,
	0x24, 0x02, 0xfd, 0x4f, 0xe8, 0x28, 0x8d, 0x1d, 0x78, 0x2b, 0x4f, 0xdc, 0x4a, 0xdd, 0x6d, 0xb5,
	0x00, 0xf6, 0x39, 0x0b, 0xf2, 0xd5, 0xdf, 0xb8, 0xa8, 0x94, 0xc3, 0xf2, 0x9d, 0x08, 0xae, 0xda,
	0xf1, 0xba, 0x85, 0xaa, 0x6b, 0xd8, 0x3a, 0x0b, 0xf2, 0xa4, 0xbc, 0x88, 0x3f, 0xdf, 0x48, 0xe4,
	0x7b, 0x69, 0x44, 0x66, 0x77, 0xd5, 0xfa, 0x03, 0x8d, 0x49, 0x78, 0x5b, 0x6d, 0xd7, 0xc1, 0xf5,
	0x15, 0xf9, 0xd5, 0x68, 0x55, 0x9c, 0x40, 0x80, 0xe0, 0x45, 0xd3, 0xea, 0x41, 0x14, 0x43, 0x0f,
	0xc6, 0xad, 0xe4, 0xbf, 0xff, 0xfd, 0x8f, 0x9d, 0xb4, 0x8f, 0x43, 0x5d, 0x34, 0x5a, 0x6d, 0x7c,
	0x6e, 0xc3, 0x0f, 0x72, 0x73, 0x6a, 0xf0, 0x8f, 0xa8, 0x23, 0x4c, 0xfd, 0x7b, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0x22, 0xf8, 0xfc, 0xd8, 0x31, 0x02, 0x00, 0x00,
}
