// Code generated by protoc-gen-go.
// source: metrics.proto
// DO NOT EDIT!

/*
Package protometrics is a generated protocol buffer package.

It is generated from these files:
	metrics.proto

It has these top-level messages:
	CpuMetric
	MemoryMetric
	NetworkMetric
	DeviceMetric
	ZMetricMsg
*/
package protometrics

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ZmetricTypes int32

const (
	ZmetricTypes_ZmNop    ZmetricTypes = 0
	ZmetricTypes_ZmDevice ZmetricTypes = 1
	ZmetricTypes_ZmApp    ZmetricTypes = 3
)

var ZmetricTypes_name = map[int32]string{
	0: "ZmNop",
	1: "ZmDevice",
	3: "ZmApp",
}
var ZmetricTypes_value = map[string]int32{
	"ZmNop":    0,
	"ZmDevice": 1,
	"ZmApp":    3,
}

func (x ZmetricTypes) Enum() *ZmetricTypes {
	p := new(ZmetricTypes)
	*p = x
	return p
}
func (x ZmetricTypes) String() string {
	return proto.EnumName(ZmetricTypes_name, int32(x))
}
func (x *ZmetricTypes) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ZmetricTypes_value, data, "ZmetricTypes")
	if err != nil {
		return err
	}
	*x = ZmetricTypes(value)
	return nil
}

type CpuMetric struct {
	UpTime           *uint32  `protobuf:"varint,2,req,name=upTime" json:"upTime,omitempty"`
	CpuUtilization   *float32 `protobuf:"fixed32,3,req,name=cpuUtilization" json:"cpuUtilization,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CpuMetric) Reset()         { *m = CpuMetric{} }
func (m *CpuMetric) String() string { return proto.CompactTextString(m) }
func (*CpuMetric) ProtoMessage()    {}

func (m *CpuMetric) GetUpTime() uint32 {
	if m != nil && m.UpTime != nil {
		return *m.UpTime
	}
	return 0
}

func (m *CpuMetric) GetCpuUtilization() float32 {
	if m != nil && m.CpuUtilization != nil {
		return *m.CpuUtilization
	}
	return 0
}

type MemoryMetric struct {
	UsedMem          *uint32  `protobuf:"varint,2,req,name=usedMem" json:"usedMem,omitempty"`
	UsedPercentage   *float32 `protobuf:"fixed32,3,req,name=usedPercentage" json:"usedPercentage,omitempty"`
	MaxMem           *uint32  `protobuf:"varint,4,req,name=maxMem" json:"maxMem,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MemoryMetric) Reset()         { *m = MemoryMetric{} }
func (m *MemoryMetric) String() string { return proto.CompactTextString(m) }
func (*MemoryMetric) ProtoMessage()    {}

func (m *MemoryMetric) GetUsedMem() uint32 {
	if m != nil && m.UsedMem != nil {
		return *m.UsedMem
	}
	return 0
}

func (m *MemoryMetric) GetUsedPercentage() float32 {
	if m != nil && m.UsedPercentage != nil {
		return *m.UsedPercentage
	}
	return 0
}

func (m *MemoryMetric) GetMaxMem() uint32 {
	if m != nil && m.MaxMem != nil {
		return *m.MaxMem
	}
	return 0
}

type NetworkMetric struct {
	DevName          *string `protobuf:"bytes,1,req,name=devName" json:"devName,omitempty"`
	TxBytes          *uint64 `protobuf:"varint,2,req,name=txBytes" json:"txBytes,omitempty"`
	RxBytes          *uint64 `protobuf:"varint,3,req,name=rxBytes" json:"rxBytes,omitempty"`
	TxDrops          *uint64 `protobuf:"varint,4,req,name=txDrops" json:"txDrops,omitempty"`
	RxDrops          *uint64 `protobuf:"varint,5,req,name=rxDrops" json:"rxDrops,omitempty"`
	TxRate           *uint64 `protobuf:"varint,6,req,name=txRate" json:"txRate,omitempty"`
	RxRate           *uint64 `protobuf:"varint,7,req,name=rxRate" json:"rxRate,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NetworkMetric) Reset()         { *m = NetworkMetric{} }
func (m *NetworkMetric) String() string { return proto.CompactTextString(m) }
func (*NetworkMetric) ProtoMessage()    {}

func (m *NetworkMetric) GetDevName() string {
	if m != nil && m.DevName != nil {
		return *m.DevName
	}
	return ""
}

func (m *NetworkMetric) GetTxBytes() uint64 {
	if m != nil && m.TxBytes != nil {
		return *m.TxBytes
	}
	return 0
}

func (m *NetworkMetric) GetRxBytes() uint64 {
	if m != nil && m.RxBytes != nil {
		return *m.RxBytes
	}
	return 0
}

func (m *NetworkMetric) GetTxDrops() uint64 {
	if m != nil && m.TxDrops != nil {
		return *m.TxDrops
	}
	return 0
}

func (m *NetworkMetric) GetRxDrops() uint64 {
	if m != nil && m.RxDrops != nil {
		return *m.RxDrops
	}
	return 0
}

func (m *NetworkMetric) GetTxRate() uint64 {
	if m != nil && m.TxRate != nil {
		return *m.TxRate
	}
	return 0
}

func (m *NetworkMetric) GetRxRate() uint64 {
	if m != nil && m.RxRate != nil {
		return *m.RxRate
	}
	return 0
}

type DeviceMetric struct {
	Cpu              *CpuMetric       `protobuf:"bytes,1,req,name=cpu" json:"cpu,omitempty"`
	Memory           *MemoryMetric    `protobuf:"bytes,2,req,name=memory" json:"memory,omitempty"`
	Network          []*NetworkMetric `protobuf:"bytes,3,rep,name=network" json:"network,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *DeviceMetric) Reset()         { *m = DeviceMetric{} }
func (m *DeviceMetric) String() string { return proto.CompactTextString(m) }
func (*DeviceMetric) ProtoMessage()    {}

func (m *DeviceMetric) GetCpu() *CpuMetric {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *DeviceMetric) GetMemory() *MemoryMetric {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *DeviceMetric) GetNetwork() []*NetworkMetric {
	if m != nil {
		return m.Network
	}
	return nil
}

type ZMetricMsg struct {
	DevID            *string       `protobuf:"bytes,1,req,name=devID" json:"devID,omitempty"`
	Ztype            *ZmetricTypes `protobuf:"varint,2,req,name=ztype,enum=protometrics.ZmetricTypes" json:"ztype,omitempty"`
	Dm               *DeviceMetric `protobuf:"bytes,3,opt,name=dm" json:"dm,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ZMetricMsg) Reset()         { *m = ZMetricMsg{} }
func (m *ZMetricMsg) String() string { return proto.CompactTextString(m) }
func (*ZMetricMsg) ProtoMessage()    {}

func (m *ZMetricMsg) GetDevID() string {
	if m != nil && m.DevID != nil {
		return *m.DevID
	}
	return ""
}

func (m *ZMetricMsg) GetZtype() ZmetricTypes {
	if m != nil && m.Ztype != nil {
		return *m.Ztype
	}
	return ZmetricTypes_ZmNop
}

func (m *ZMetricMsg) GetDm() *DeviceMetric {
	if m != nil {
		return m.Dm
	}
	return nil
}

func init() {
	proto.RegisterEnum("protometrics.ZmetricTypes", ZmetricTypes_name, ZmetricTypes_value)
}
