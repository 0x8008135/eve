// Code generated by protoc-gen-go. DO NOT EDIT.
// source: baseosconfig.proto

package zconfig

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BaseOSConfig struct {
	Uuidandversion *UUIDandVersion `protobuf:"bytes,1,opt,name=uuidandversion" json:"uuidandversion,omitempty"`
	Displayname    string          `protobuf:"bytes,2,opt,name=displayname" json:"displayname,omitempty"`
	Drives         []*Drive        `protobuf:"bytes,3,rep,name=drives" json:"drives,omitempty"`
	Activate       bool            `protobuf:"varint,4,opt,name=activate" json:"activate,omitempty"`
}

func (m *BaseOSConfig) Reset()                    { *m = BaseOSConfig{} }
func (m *BaseOSConfig) String() string            { return proto.CompactTextString(m) }
func (*BaseOSConfig) ProtoMessage()               {}
func (*BaseOSConfig) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *BaseOSConfig) GetUuidandversion() *UUIDandVersion {
	if m != nil {
		return m.Uuidandversion
	}
	return nil
}

func (m *BaseOSConfig) GetDisplayname() string {
	if m != nil {
		return m.Displayname
	}
	return ""
}

func (m *BaseOSConfig) GetDrives() []*Drive {
	if m != nil {
		return m.Drives
	}
	return nil
}

func (m *BaseOSConfig) GetActivate() bool {
	if m != nil {
		return m.Activate
	}
	return false
}

func init() {
	proto.RegisterType((*BaseOSConfig)(nil), "BaseOSConfig")
}

func init() { proto.RegisterFile("baseosconfig.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x3f, 0x4b, 0x03, 0x41,
	0x10, 0x47, 0x39, 0x23, 0x21, 0xee, 0xa9, 0x81, 0xad, 0x8e, 0x80, 0xba, 0x58, 0x5d, 0xb5, 0x07,
	0xb1, 0xb0, 0x95, 0x98, 0xc6, 0x4a, 0x38, 0x89, 0x85, 0xdd, 0xdc, 0xee, 0x78, 0x2e, 0x64, 0x77,
	0x8e, 0xfd, 0x07, 0xe6, 0xfb, 0xf8, 0x3d, 0xc5, 0xdc, 0x21, 0x62, 0xf9, 0x1e, 0x6f, 0x8a, 0xf9,
	0x31, 0xde, 0x41, 0x40, 0x0a, 0x8a, 0xdc, 0xbb, 0xe9, 0xe5, 0xe0, 0x29, 0xd2, 0x6a, 0xa9, 0x31,
	0x2b, 0xb2, 0x96, 0xdc, 0x24, 0x2e, 0x42, 0x24, 0x0f, 0x3d, 0x8e, 0x78, 0xfb, 0x55, 0xb0, 0xf3,
	0x0d, 0x04, 0x7c, 0x7e, 0x79, 0x3c, 0x9e, 0xf1, 0x7b, 0x76, 0x99, 0x92, 0xd1, 0xe0, 0x74, 0x46,
	0x1f, 0x0c, 0xb9, 0xaa, 0x10, 0x45, 0x5d, 0xae, 0x97, 0x72, 0xb7, 0x7b, 0xda, 0x82, 0xd3, 0xaf,
	0xa3, 0x6e, 0xff, 0x65, 0x5c, 0xb0, 0x52, 0x9b, 0x30, 0xec, 0xe1, 0xd3, 0x81, 0xc5, 0xea, 0x44,
	0x14, 0xf5, 0x59, 0xfb, 0x57, 0xf1, 0x6b, 0x36, 0xd7, 0xde, 0x64, 0x0c, 0xd5, 0x4c, 0xcc, 0xea,
	0x72, 0x3d, 0x97, 0xdb, 0x1f, 0x6c, 0x27, 0xcb, 0x57, 0x6c, 0x01, 0x2a, 0x9a, 0x0c, 0x11, 0xab,
	0x53, 0x51, 0xd4, 0x8b, 0xf6, 0x97, 0x37, 0x0f, 0xec, 0x46, 0x91, 0x95, 0x07, 0xd4, 0xa8, 0x41,
	0xaa, 0x3d, 0x25, 0x2d, 0x53, 0x40, 0x9f, 0x8d, 0x9a, 0x5e, 0x79, 0xbb, 0xea, 0x4d, 0xfc, 0x48,
	0x9d, 0x54, 0x64, 0x9b, 0xb1, 0x6b, 0x60, 0x30, 0xcd, 0x61, 0xdc, 0xa3, 0x9b, 0x1f, 0xab, 0xbb,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xce, 0x33, 0x2b, 0x54, 0x26, 0x01, 0x00, 0x00,
}
