// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package zconfig

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ZSrvType int32

const (
	ZSrvType_ZsrvFirst      ZSrvType = 0
	ZSrvType_ZsrvStrongSwan ZSrvType = 1
	ZSrvType_ZsrvLISP       ZSrvType = 2
	ZSrvType_ZsrvBridge     ZSrvType = 3
	ZSrvType_ZsrvNAT        ZSrvType = 4
	ZSrvType_ZsrvLB         ZSrvType = 5
	ZSrvType_ZsrvLast       ZSrvType = 255
)

var ZSrvType_name = map[int32]string{
	0:   "ZsrvFirst",
	1:   "ZsrvStrongSwan",
	2:   "ZsrvLISP",
	3:   "ZsrvBridge",
	4:   "ZsrvNAT",
	5:   "ZsrvLB",
	255: "ZsrvLast",
}
var ZSrvType_value = map[string]int32{
	"ZsrvFirst":      0,
	"ZsrvStrongSwan": 1,
	"ZsrvLISP":       2,
	"ZsrvBridge":     3,
	"ZsrvNAT":        4,
	"ZsrvLB":         5,
	"ZsrvLast":       255,
}

func (x ZSrvType) String() string {
	return proto.EnumName(ZSrvType_name, int32(x))
}
func (ZSrvType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// Service Opaue config
type ServiceOpqConfig struct {
	Oconfig string `protobuf:"bytes,1,opt,name=oconfig" json:"oconfig,omitempty"`
}

func (m *ServiceOpqConfig) Reset()                    { *m = ServiceOpqConfig{} }
func (m *ServiceOpqConfig) String() string            { return proto.CompactTextString(m) }
func (*ServiceOpqConfig) ProtoMessage()               {}
func (*ServiceOpqConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ServiceOpqConfig) GetOconfig() string {
	if m != nil {
		return m.Oconfig
	}
	return ""
}

type ServiceInstanceConfig struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Displayname string   `protobuf:"bytes,2,opt,name=displayname" json:"displayname,omitempty"`
	Srvtype     ZSrvType `protobuf:"varint,3,opt,name=srvtype,enum=ZSrvType" json:"srvtype,omitempty"`
	Activate    bool     `protobuf:"varint,5,opt,name=activate" json:"activate,omitempty"`
	// towards application which networkUUID to use
	Applink string `protobuf:"bytes,10,opt,name=applink" json:"applink,omitempty"`
	// towards devices which phyiscal or logical adapter to use
	Devlink *Adapter          `protobuf:"bytes,20,opt,name=devlink" json:"devlink,omitempty"`
	Cfg     *ServiceOpqConfig `protobuf:"bytes,30,opt,name=cfg" json:"cfg,omitempty"`
}

func (m *ServiceInstanceConfig) Reset()                    { *m = ServiceInstanceConfig{} }
func (m *ServiceInstanceConfig) String() string            { return proto.CompactTextString(m) }
func (*ServiceInstanceConfig) ProtoMessage()               {}
func (*ServiceInstanceConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ServiceInstanceConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceInstanceConfig) GetDisplayname() string {
	if m != nil {
		return m.Displayname
	}
	return ""
}

func (m *ServiceInstanceConfig) GetSrvtype() ZSrvType {
	if m != nil {
		return m.Srvtype
	}
	return ZSrvType_ZsrvFirst
}

func (m *ServiceInstanceConfig) GetActivate() bool {
	if m != nil {
		return m.Activate
	}
	return false
}

func (m *ServiceInstanceConfig) GetApplink() string {
	if m != nil {
		return m.Applink
	}
	return ""
}

func (m *ServiceInstanceConfig) GetDevlink() *Adapter {
	if m != nil {
		return m.Devlink
	}
	return nil
}

func (m *ServiceInstanceConfig) GetCfg() *ServiceOpqConfig {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func init() {
	proto.RegisterType((*ServiceOpqConfig)(nil), "ServiceOpqConfig")
	proto.RegisterType((*ServiceInstanceConfig)(nil), "ServiceInstanceConfig")
	proto.RegisterEnum("ZSrvType", ZSrvType_name, ZSrvType_value)
}

func init() { proto.RegisterFile("service.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xdf, 0x8a, 0x13, 0x31,
	0x14, 0xc6, 0xcd, 0xd4, 0xdd, 0x99, 0x9e, 0xda, 0x31, 0x06, 0x85, 0x61, 0x41, 0x1d, 0xba, 0x37,
	0x83, 0x48, 0x0a, 0xeb, 0x0b, 0xb8, 0x15, 0x84, 0x05, 0x51, 0x99, 0xd9, 0xab, 0xde, 0xa5, 0x49,
	0x3a, 0x06, 0x3b, 0x49, 0x4c, 0xd2, 0x91, 0xf6, 0x9d, 0x7d, 0x06, 0x65, 0xfe, 0x89, 0xee, 0x5d,
	0xbe, 0xf3, 0xfb, 0x1d, 0xf8, 0xc8, 0x81, 0xa5, 0x97, 0xae, 0x55, 0x5c, 0x52, 0xeb, 0x4c, 0x30,
	0x57, 0x4f, 0x85, 0x6c, 0xb9, 0x69, 0x1a, 0xa3, 0x87, 0xc1, 0xea, 0x2d, 0xe0, 0x6a, 0x30, 0xbe,
	0xd8, 0x1f, 0x1f, 0x8c, 0xde, 0xab, 0x9a, 0x64, 0x10, 0x1b, 0xde, 0x3f, 0x33, 0x94, 0xa3, 0x62,
	0x5e, 0x4e, 0x71, 0xf5, 0x0b, 0xc1, 0x8b, 0x51, 0xbf, 0xd3, 0x3e, 0x30, 0xcd, 0xe5, 0xb8, 0x93,
	0x42, 0xa4, 0xc4, 0xa8, 0x47, 0x4a, 0x90, 0x1c, 0x16, 0x42, 0x79, 0x7b, 0x60, 0x27, 0xcd, 0x1a,
	0x99, 0x45, 0x3d, 0xf8, 0x77, 0x44, 0xae, 0x21, 0xf6, 0xae, 0x0d, 0x27, 0x2b, 0xb3, 0x59, 0x8e,
	0x8a, 0xf4, 0x66, 0x4e, 0xb7, 0x95, 0x6b, 0xef, 0x4f, 0x56, 0x96, 0x13, 0x21, 0x57, 0x90, 0x30,
	0x1e, 0x54, 0xcb, 0x82, 0xcc, 0x2e, 0x72, 0x54, 0x24, 0xe5, 0xdf, 0xdc, 0xd5, 0x64, 0xd6, 0x1e,
	0x94, 0xfe, 0x9e, 0xc1, 0x50, 0x73, 0x8c, 0x64, 0x05, 0xb1, 0x90, 0x6d, 0x4f, 0x9e, 0xe7, 0xa8,
	0x58, 0xdc, 0x24, 0xf4, 0x56, 0x30, 0x1b, 0xa4, 0x2b, 0x27, 0x40, 0xae, 0x61, 0xc6, 0xf7, 0x75,
	0xf6, 0xaa, 0xe7, 0xcf, 0xe8, 0xc3, 0x4f, 0x28, 0x3b, 0xfa, 0xc6, 0x43, 0x32, 0x75, 0x22, 0x4b,
	0x98, 0x6f, 0xbd, 0x6b, 0x3f, 0x2a, 0xe7, 0x03, 0x7e, 0x44, 0x08, 0xa4, 0x5d, 0xac, 0x82, 0x33,
	0xba, 0xae, 0x7e, 0x32, 0x8d, 0x11, 0x79, 0x02, 0x49, 0x37, 0xfb, 0x74, 0x57, 0x7d, 0xc5, 0x11,
	0x49, 0x01, 0xba, 0xb4, 0x71, 0x4a, 0xd4, 0x12, 0xcf, 0xc8, 0x02, 0xe2, 0x2e, 0x7f, 0xbe, 0xbd,
	0xc7, 0x8f, 0x09, 0xc0, 0x65, 0xaf, 0x6e, 0xf0, 0x05, 0x59, 0x8e, 0x6b, 0xcc, 0x07, 0xfc, 0x1b,
	0x6d, 0xde, 0xc3, 0x6b, 0x6e, 0x1a, 0x7a, 0x96, 0x42, 0x0a, 0x46, 0xf9, 0xc1, 0x1c, 0x05, 0x3d,
	0xfe, 0x77, 0xc6, 0xed, 0xcb, 0x5a, 0x85, 0x6f, 0xc7, 0x1d, 0xe5, 0xa6, 0x59, 0x0f, 0xde, 0x9a,
	0x59, 0xb5, 0x3e, 0x0f, 0x67, 0xda, 0x5d, 0xf6, 0xd6, 0xbb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x15, 0xdb, 0x6d, 0x9c, 0xfd, 0x01, 0x00, 0x00,
}
