// Code generated by protoc-gen-go. DO NOT EDIT.
// source: appconfig.proto

package zconfig

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type InstanceOpsCmd struct {
	Counter uint32 `protobuf:"varint,2,opt,name=counter" json:"counter,omitempty"`
	OpsTime string `protobuf:"bytes,4,opt,name=opsTime" json:"opsTime,omitempty"`
}

func (m *InstanceOpsCmd) Reset()                    { *m = InstanceOpsCmd{} }
func (m *InstanceOpsCmd) String() string            { return proto.CompactTextString(m) }
func (*InstanceOpsCmd) ProtoMessage()               {}
func (*InstanceOpsCmd) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *InstanceOpsCmd) GetCounter() uint32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *InstanceOpsCmd) GetOpsTime() string {
	if m != nil {
		return m.OpsTime
	}
	return ""
}

type AppInstanceConfig struct {
	Uuidandversion *UUIDandVersion `protobuf:"bytes,1,opt,name=uuidandversion" json:"uuidandversion,omitempty"`
	Displayname    string          `protobuf:"bytes,2,opt,name=displayname" json:"displayname,omitempty"`
	Fixedresources *VmConfig       `protobuf:"bytes,3,opt,name=fixedresources" json:"fixedresources,omitempty"`
	Drives         []*Drive        `protobuf:"bytes,4,rep,name=drives" json:"drives,omitempty"`
	Activate       bool            `protobuf:"varint,5,opt,name=activate" json:"activate,omitempty"`
	// NetworkAdapter are virtual adapters assigned to the application
	// Physical adapters such as eth1 are part of Adapter
	Interfaces []*NetworkAdapter `protobuf:"bytes,6,rep,name=interfaces" json:"interfaces,omitempty"`
	Adapters   []*Adapter        `protobuf:"bytes,7,rep,name=adapters" json:"adapters,omitempty"`
	Restart    *InstanceOpsCmd   `protobuf:"bytes,9,opt,name=restart" json:"restart,omitempty"`
	// The device behavior for a purge command is to restart the domU.
	// with the disks/drives recreated from the downloaded images
	// (whether preserve is set or not).
	//    if the manifest is changed with purge option, new manifest will
	//    be used. Device doesn't know what has changed, it will get the
	//    changed config.
	//
	//    if disks section have changed will be purged automatically.
	//    phase 1: we would purge all disks irrespective preserve flag
	Purge *InstanceOpsCmd `protobuf:"bytes,10,opt,name=purge" json:"purge,omitempty"`
	// App Instance initialization configuration data provided by user
	// This will be used as "user-data" in cloud-init
	// Empty string will indicate that cloud-init is not required
	UserData string `protobuf:"bytes,11,opt,name=userData" json:"userData,omitempty"`
	// App Instance identification data generateded by zedCloud
	// This will be used as "meta-data" in cloud-init
	// Empty string will indicate that cloud-init is not required
	MetaData string `protobuf:"bytes,12,opt,name=metaData" json:"metaData,omitempty"`
}

func (m *AppInstanceConfig) Reset()                    { *m = AppInstanceConfig{} }
func (m *AppInstanceConfig) String() string            { return proto.CompactTextString(m) }
func (*AppInstanceConfig) ProtoMessage()               {}
func (*AppInstanceConfig) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *AppInstanceConfig) GetUuidandversion() *UUIDandVersion {
	if m != nil {
		return m.Uuidandversion
	}
	return nil
}

func (m *AppInstanceConfig) GetDisplayname() string {
	if m != nil {
		return m.Displayname
	}
	return ""
}

func (m *AppInstanceConfig) GetFixedresources() *VmConfig {
	if m != nil {
		return m.Fixedresources
	}
	return nil
}

func (m *AppInstanceConfig) GetDrives() []*Drive {
	if m != nil {
		return m.Drives
	}
	return nil
}

func (m *AppInstanceConfig) GetActivate() bool {
	if m != nil {
		return m.Activate
	}
	return false
}

func (m *AppInstanceConfig) GetInterfaces() []*NetworkAdapter {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

func (m *AppInstanceConfig) GetAdapters() []*Adapter {
	if m != nil {
		return m.Adapters
	}
	return nil
}

func (m *AppInstanceConfig) GetRestart() *InstanceOpsCmd {
	if m != nil {
		return m.Restart
	}
	return nil
}

func (m *AppInstanceConfig) GetPurge() *InstanceOpsCmd {
	if m != nil {
		return m.Purge
	}
	return nil
}

func (m *AppInstanceConfig) GetUserData() string {
	if m != nil {
		return m.UserData
	}
	return ""
}

func (m *AppInstanceConfig) GetMetaData() string {
	if m != nil {
		return m.MetaData
	}
	return ""
}

func init() {
	proto.RegisterType((*InstanceOpsCmd)(nil), "InstanceOpsCmd")
	proto.RegisterType((*AppInstanceConfig)(nil), "AppInstanceConfig")
}

func init() { proto.RegisterFile("appconfig.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x6f, 0x13, 0x31,
	0x10, 0xc5, 0xb5, 0xa4, 0x4d, 0x36, 0x0e, 0x4d, 0x84, 0x4f, 0x56, 0x25, 0x60, 0x55, 0x81, 0xb4,
	0x5c, 0x1c, 0x51, 0x0e, 0x5c, 0x29, 0xcd, 0xa5, 0x17, 0x90, 0x2c, 0xda, 0x03, 0xb7, 0xa9, 0x3d,
	0x09, 0x16, 0xf5, 0x1f, 0xd9, 0xde, 0x05, 0xfa, 0xe1, 0xf8, 0x6c, 0x68, 0xbd, 0xbb, 0x51, 0x88,
	0x7a, 0x7c, 0xef, 0xfd, 0x66, 0x66, 0x77, 0x3c, 0x64, 0x05, 0xde, 0x4b, 0x67, 0xb7, 0x7a, 0xc7,
	0x7d, 0x70, 0xc9, 0x9d, 0xaf, 0x14, 0xb6, 0xd2, 0x19, 0xe3, 0xec, 0x60, 0x9c, 0xc5, 0xe4, 0x02,
	0xec, 0x70, 0x90, 0x65, 0x6b, 0x46, 0xd2, 0x62, 0x3a, 0x2c, 0xbd, 0xd8, 0x90, 0xe5, 0x8d, 0x8d,
	0x09, 0xac, 0xc4, 0xaf, 0x3e, 0x5e, 0x1b, 0x45, 0x19, 0x99, 0x49, 0xd7, 0xd8, 0x84, 0x81, 0x3d,
	0xab, 0x8a, 0xfa, 0x4c, 0x8c, 0xb2, 0x4b, 0x9c, 0x8f, 0xdf, 0xb4, 0x41, 0x76, 0x52, 0x15, 0xf5,
	0x5c, 0x8c, 0xf2, 0xe2, 0xef, 0x84, 0xbc, 0xb8, 0xf2, 0x7e, 0xec, 0x74, 0x9d, 0x27, 0xd0, 0x8f,
	0x64, 0xd9, 0x34, 0x5a, 0x81, 0x55, 0x2d, 0x86, 0xa8, 0x9d, 0x65, 0x45, 0x55, 0xd4, 0x8b, 0xcb,
	0x15, 0xbf, 0xbd, 0xbd, 0xd9, 0x80, 0x55, 0x77, 0xbd, 0x2d, 0x8e, 0x30, 0x5a, 0x91, 0x85, 0xd2,
	0xd1, 0x3f, 0xc0, 0x1f, 0x0b, 0x06, 0xf3, 0x67, 0xcc, 0xc5, 0xa1, 0x45, 0xdf, 0x93, 0xe5, 0x56,
	0xff, 0x46, 0x15, 0x30, 0xba, 0x26, 0x48, 0x8c, 0x6c, 0x92, 0x5b, 0xcf, 0xf9, 0x9d, 0xe9, 0xa7,
	0x8b, 0x23, 0x80, 0xbe, 0x22, 0x53, 0x15, 0x74, 0x8b, 0x91, 0x9d, 0x54, 0x93, 0x7a, 0x71, 0x39,
	0xe5, 0x9b, 0x4e, 0x8a, 0xc1, 0xa5, 0xe7, 0xa4, 0x04, 0x99, 0x74, 0x0b, 0x09, 0xd9, 0x69, 0x55,
	0xd4, 0xa5, 0xd8, 0x6b, 0xba, 0x26, 0x44, 0x77, 0x2b, 0xd8, 0x42, 0x37, 0x6a, 0x9a, 0xeb, 0x57,
	0xfc, 0x0b, 0xa6, 0x5f, 0x2e, 0xfc, 0xbc, 0x52, 0xe0, 0x13, 0x06, 0x71, 0x80, 0xd0, 0x37, 0xa4,
	0x84, 0xde, 0x8e, 0x6c, 0x96, 0xf1, 0x92, 0x8f, 0xdc, 0x3e, 0xa1, 0xef, 0xc8, 0x2c, 0x60, 0x4c,
	0x10, 0x12, 0x9b, 0x0f, 0x9b, 0xf9, 0xff, 0x31, 0xc4, 0x98, 0xd3, 0xb7, 0xe4, 0xd4, 0x37, 0x61,
	0x87, 0x8c, 0x3c, 0x0d, 0xf6, 0x69, 0xf7, 0x13, 0x4d, 0xc4, 0xb0, 0x81, 0x04, 0x6c, 0x91, 0xd7,
	0xb6, 0xd7, 0x5d, 0x66, 0x30, 0x41, 0xce, 0x9e, 0xf7, 0xd9, 0xa8, 0x3f, 0x7f, 0x22, 0xaf, 0xa5,
	0x33, 0xfc, 0x11, 0x15, 0x2a, 0xe0, 0xf2, 0xc1, 0x35, 0x8a, 0x77, 0x85, 0xad, 0x96, 0xc3, 0x11,
	0x7d, 0x7f, 0xb9, 0xd3, 0xe9, 0x47, 0x73, 0xcf, 0xa5, 0x33, 0xeb, 0x9e, 0x5b, 0x83, 0xd7, 0xeb,
	0xc7, 0xfe, 0x9c, 0xee, 0xa7, 0x99, 0xfa, 0xf0, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x4c, 0x46,
	0xf2, 0x9d, 0x02, 0x00, 0x00,
}
