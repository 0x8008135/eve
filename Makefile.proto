# Makefile
#
# Targets:
# 	all: Builds the code
# 	build: Builds the code
# 	fmt: Formats the source files
# 	clean: cleans the code
#

# Go parameters
GOCMD=go
GOBUILD=$(GOCMD) build
GOCLEAN=$(GOCMD) clean
GOTEST=$(GOCMD) test
GOINSTALL=$(GOCMD) install
GOGENERATE=$(GOCMD) generate
GOGET=$(GOCMD) get
GOFMT=gofmt -w

# Package lists
TOPLEVEL_PKG := .
PKG := github.com/zededa/api/$(notdir $(CURDIR))

PYTHONOUT=          ./pyproto

GOPATH0 = $(firstword $(subst :, ,$(GOPATH)))
PYINSTALLDIR= $(GOPATH0)/bin

SRCS=        *.proto

#GENGO=          $(SRCS:.proto=.pb.go)

GOSRCS=         $(SRCS:.proto=.pb.go)

.PHONY:         all genproto

all: build
genproto:            $(GOSRCS)
        @:

# XXX needed?
generate:            $(GOSRCS)
	$(GOGENERATE) -x $(PKG)

# XXX should we add this to all?
init:	
	$(GOGET) ./...

%.pb.go::       %.proto
	protoc -I.:$(GOPATH) --gofast_out=. $?
	mkdir -p $(PYTHONOUT)
	protoc -I.:$(GOPATH) --python_out=$(PYTHONOUT) $?

cleanproto:
	rm -f ./*.pb.go

build: genproto
	$(GOBUILD) $(GOSRCS)
clean: cleanproto
	$(GOCLEAN)
	rm -rf $(PYTHONOUT)
test: 
	$(GOTEST)
fmt: 
	$(GOFMT)
install: build
	$(GOINSTALL) $(PKG)
	mkdir -p $(PYINSTALLDIR)/python/$(basename $(notdir $(CURDIR)))
	install $(CURDIR)/pyproto/* $(PYINSTALLDIR)/python/$(basename $(notdir $(CURDIR)))
	touch $(PYINSTALLDIR)/python/$(basename $(notdir $(CURDIR)))/__init__.py
